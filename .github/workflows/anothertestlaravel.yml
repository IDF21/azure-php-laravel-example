name: Uhhh Yea boy 

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
    

env:
  WEBAPP: PHPTESTER2    # Ex: app-MobileSalesApp-Prod-USEast-01
  GROUP: visfordlinuxmyown  # Ex:  rg-mobile_sales_app-prod-01
  ACCOUNT: thisisthetestaccount  # Does not have to be exist, this will be created for you automatically ( insert any name )
  CONTAINER: deploydevtempcontainer22  # This name of Storage Container ( insert any name )
  EXPIRY_TIME: 60 minutes
  SUBSCRIPTION: 3ac1466e-ed4b-471a-a7ac-f188654f9746

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'

      - name: Check if composer.json exists
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: 'composer.json'

      - name: Run composer install if composer.json exists
        if: steps.check_files.outputs.files_exists == 'true'
        run: composer validate --no-check-publish && composer install --prefer-dist --no-progress

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: php-app
          path: .
          
  deploy:
      runs-on: ubuntu-latest
      needs: build

      steps:
        - name: Azure Login
          uses: azure/login@v1
          with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}

        - name: Download artifact from build job
          uses: actions/download-artifact@v2
          with:
            name: php-app
            path: php-app
          
        - name: Zip the app contents
          uses: papeloto/action-zip@v1
          with:
            files: php-app
            dest: php-app12.zip


        - name: Set SAS token expiration
          run: echo "expiry=`date -u -d "$EXPIRY_TIME" '+%Y-%m-%dT%H:%MZ'`" >> $GITHUB_ENV
        
        - name: Azure CLI script
          uses: azure/CLI@v1
          with:
            azcliversion: latest
            inlineScript: |
              az extension add --name webapp

              az storage account create   -n $ACCOUNT   -g $GROUP -l centralus
              az storage container create -n $CONTAINER --account-name $ACCOUNT
              az storage blob upload      -f php-app12.zip    --account-name $ACCOUNT -c $CONTAINER -n $ACCOUNT --overwrite

              ZIP_URL=$(az storage blob generate-sas --full-uri --permissions r --expiry ${{ env.expiry }} --account-name $ACCOUNT -c $CONTAINER -n $ACCOUNT | xargs)

              az rest --method PUT --uri https://management.azure.com/subscriptions/${SUBSCRIPTION}/resourceGroups/${GROUP}/providers/Microsoft.Web/sites/${WEBAPP}/extensions/onedeploy?api-version=2020-12-01 --body '{"properties": {"properties": {"packageUri": "'"${ZIP_URL}"'"}, "type":"zip"}}' --verbose

              az storage container delete -n $CONTAINER --account-name $ACCOUNT 


  
  
  
  
  
